{"version":3,"sources":["components/common/InputText/InputText.module.scss","components/common/Button/Button.module.scss","app/App.module.scss","components/Form/Form.module.scss","components/common/Overlay/Overlay.module.scss","components/common/Message/Message.module.scss","utils/validator.ts","store/store.ts","components/common/SvgIcon/SvgIcon.tsx","components/common/InputText/InputText.tsx","components/common/Button/Button.tsx","components/common/Overlay/Overlay.tsx","hooks/useLockBodyScroll.ts","hooks/useKeyPress.ts","components/common/Message/Message.tsx","components/Form/Form.tsx","app/App.tsx","index.tsx"],"names":["module","exports","validate","value","trimmedValue","trim","error","length","formStore","fields","firstName","lastName","changeHandler","event","target","name","eventName","validateForm","reset","makeAutoObservable","this","SvgIcon","type","viewBox","height","width","xmlns","d","aria-hidden","InputText","onChange","onChangeText","onKeyPress","onEnter","className","errorClassName","text","restProps","finalErrorClassName","s","errorMessage","finalInputClassName","input","inputWrapper","label","e","currentTarget","key","Button","large","small","finalClassName","btn","default","Overlay","children","closeHandler","useLayoutEffect","originalStyle","window","getComputedStyle","document","body","overflow","style","targetKey","action","useState","keyPressed","setKeyPressed","downHandler","useCallback","upHandler","useEffect","addEventListener","removeEventListener","useKeyPress","overlay","onClick","Message","clickHandler","btnText","messageClassName","message","Form","observer","modal","setModal","closeModalHandler","stopPropagation","form","onSubmit","preventDefault","noValidate","placeholder","required","App","app","container","ReactDOM","render","StrictMode","getElementById"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,aAAe,gCAAgC,aAAe,gCAAgC,MAAQ,yBAAyB,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,2B,gBCAzND,EAAOC,QAAU,CAAC,IAAM,oBAAoB,MAAQ,sBAAsB,MAAQ,sBAAsB,QAAU,wBAAwB,MAAQ,wB,qBCAlJD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,UAAY,oD,gBCArDD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,wB,iBCAtDD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,oBAAoB,mCAAmC,iBAAiB,gCAAgC,mBAAmB,kCAAkC,gBAAgB,+BAA+B,YAAY,2BAA2B,MAAQ,yB,yKCDnSC,EAAW,SAACC,GACvB,IAAMC,EAAeD,EAAME,OACvBC,EAAQ,GAQZ,MAN4B,qBAAjBF,GAAiD,KAAjBA,EACzCE,EAAQ,8KACCF,GAAgBA,EAAaG,OAAS,IAC/CD,EAAQ,0LAGHA,GCoDIE,EAAY,IA9BvB,aAAe,IAAD,gCAXdC,OAAqB,CACnBC,UAAW,CACTP,MAAO,GACPG,MAAO,IAETK,SAAU,CACRR,MAAO,GACPG,MAAO,KAIG,KAIdM,cAAgB,SAACC,GAA0C,IAAD,EAChCA,EAAMC,OAAtBC,EADgD,EAChDA,KAAMZ,EAD0C,EAC1CA,MACRa,EAAYD,EAElB,EAAKN,OAAOO,GAAWb,MAAQA,EAC/B,EAAKM,OAAOO,GAAWV,MAAQJ,EAAS,EAAKO,OAAOO,GAAWb,QATnD,KAYdc,aAAe,WAAO,IAAD,EACa,EAAKR,OAA7BC,EADW,EACXA,UAAWC,EADA,EACAA,SAKnB,OAHAD,EAAUJ,MAAQJ,EAASQ,EAAUP,OACrCQ,EAASL,MAAQJ,EAASS,EAASR,SAE1BO,EAAUJ,OAASK,EAASL,QAlBzB,KAqBdY,MAAQ,WACN,EAAKT,OAAOC,UAAUP,MAAQ,GAC9B,EAAKM,OAAOE,SAASR,MAAQ,GAE7B,EAAKM,OAAOC,UAAUJ,MAAQ,GAC9B,EAAKG,OAAOE,SAASL,MAAQ,IAzB7Ba,YAAmBC,O,qCC3BVC,EAA2B,SAAC,GACvC,OADoD,EAAXC,MAEvC,IAAK,OACH,OACE,qBACEC,QAAQ,cACRC,OAAO,KACPC,MAAM,KACNC,MAAM,6BAJR,SAME,sBAAMC,EAAE,8vCAId,IAAK,QACH,OACE,qBACEJ,QAAQ,cACRC,OAAO,KACPC,MAAM,KACNC,MAAM,6BAJR,SAME,sBAAMC,EAAE,mXAId,IAAK,WACH,OACE,sBACEJ,QAAQ,YACRC,OAAO,KACPC,MAAM,KACNC,MAAM,6BAJR,UAME,sBAAMC,EAAE,4QACR,sBAAMA,EAAE,2MACR,sBAAMA,EAAE,iIACR,sBAAMA,EAAE,6GAId,QACE,OACE,sBACEH,OAAO,KACPC,MAAM,KACNF,QAAQ,cACRK,cAAY,OACZF,MAAM,6BALR,UAOE,sBAAMC,EAAE,gEACR,sBAAMA,EAAE,+LACR,sBAAMA,EAAE,gMACR,sBAAMA,EAAE,kEClCLE,EAA2B,SAAC,GAYlC,IAAD,IAXJP,YAWI,MAXG,OAWH,EAVJQ,EAUI,EAVJA,SACAC,EASI,EATJA,aACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,QACA3B,EAMI,EANJA,MACA4B,EAKI,EALJA,UACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,KAEGC,EACC,qHAYEC,EAAmB,UAAMC,IAAEC,aAAR,YACvBL,GAAkC,IAE9BM,EAAmB,UAAMF,IAAEG,MAAR,YAAiBpC,EAAQiC,IAAEjC,MAAQ,GAAnC,YACvB4B,GAAwB,IAG1B,OACE,sBAAKA,UAAWK,IAAEI,aAAlB,UACGrC,GAAS,sBAAM4B,UAAWI,EAAjB,SAAuChC,IAEjD,wBAAO4B,UAAWK,IAAEK,MAApB,UACE,sBAAMV,UAAWK,IAAEH,KAAnB,SAA0BA,GAAI,qBAAkBd,KAEhD,mCACEA,KAAMA,EACNQ,SA3BgB,SAACe,GACvBf,GAAYA,EAASe,GAErBd,GAAgBA,EAAac,EAAEC,cAAc3C,QAyBvC6B,WAvBkB,SAACa,GACzBb,GAAcA,EAAWa,GAEf,UAAVA,EAAEE,KAAmBd,GAAWA,KAqB1BC,UAAWO,GACPJ,IAGN,cAAC,EAAD,CAASf,KAAMA,W,gBCxDV0B,EAAwB,SAAC,GAM/B,IALL1C,EAKI,EALJA,MACA2C,EAII,EAJJA,MACAC,EAGI,EAHJA,MACAhB,EAEI,EAFJA,UACGG,EACC,qDACEc,EAAc,UAAMZ,IAAEa,IAAR,YAAeH,EAAQV,IAAEU,MAAQ,GAAjC,YAClBC,EAAQX,IAAEW,MAAQ,GADA,YAEhB5C,EAAQiC,IAAEjC,MAAQiC,IAAEc,QAFJ,YAEenB,GAAwB,IAE3D,OAAO,oCAAQA,UAAWiB,GAAoBd,K,iBCdnCiB,EAAyB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAIjD,OCbAC,2BAAgB,WAEd,IAAMC,EAAgBC,OAAOC,iBAAiBC,SAASC,MAAMC,SAI7D,OAFAF,SAASC,KAAKE,MAAMD,SAAW,SAExB,WACLF,SAASC,KAAKE,MAAMD,SAAWL,KAEhC,ICVsB,SACzBO,EACAC,GACG,MAEiCC,oBAAS,GAF1C,mBAEIC,EAFJ,KAEgBC,EAFhB,KAKGC,EAAcC,uBAClB,YAA8B,EAA3BxB,MACWkB,IACVI,GAAc,GAEdH,OAGJ,CAACD,EAAWC,IAIRM,EAAYD,uBAChB,YAA8B,EAA3BxB,MACWkB,GACVI,GAAc,KAGlB,CAACJ,IAIHQ,qBAAU,WAIR,OAHAd,OAAOe,iBAAiB,UAAWJ,GACnCX,OAAOe,iBAAiB,QAASF,GAE1B,WACLb,OAAOgB,oBAAoB,UAAWL,GACtCX,OAAOgB,oBAAoB,QAASH,MAErC,CAACF,EAAaE,IF1BjBI,CAAY,SAAUpB,GAGpB,qBAAKtB,UAAWK,IAAEsC,QAASC,QAAStB,EAApC,SACGD,K,iBGPMwB,EAAyB,SAAC,GAKhC,IAJLxB,EAII,EAJJA,SACArB,EAGI,EAHJA,UACA8C,EAEI,EAFJA,aAEI,IADJC,eACI,MADM,QACN,EACEC,EAAgB,UAAM3C,IAAE4C,QAAR,YAAmBjD,GAAwB,IAEjE,OACE,sBAAKA,UAAWgD,EAAhB,UACE,4BAAI3B,IACHyB,GACC,cAAC,EAAD,CAAQ9B,OAAK,EAAC5C,OAAK,EAACwE,QAASE,EAA7B,SACGC,QCREG,EAAWC,aAAS,WAAO,IAAD,EACXlB,oBAAS,GADE,mBAC9BmB,EAD8B,KACvBC,EADuB,OAQjC/E,EAJFC,OAAUC,EAJyB,EAIzBA,UAAWC,EAJc,EAIdA,SACrBC,EAGEJ,EAHFI,cACAK,EAEET,EAFFS,aACAC,EACEV,EADFU,MAUIsE,EAAoB,SACxB3E,GAEK,OAALA,QAAK,IAALA,KAAO4E,mBAEE,OAAL5E,QAAK,IAALA,OAAA,EAAAA,EAAOC,WAAP,OAAkBD,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOiC,iBAC3ByC,GAAS,GACTrE,MAIJ,OACE,gCACE,uBAAMgB,UAAWK,IAAEmD,KAAMC,SApBZ,SAAC9E,GAChBA,EAAM+E,iBAEU3E,KACLsE,GAAS,IAgB2BM,YAAU,EAAvD,UACE,cAAC,EAAD,CACEC,YAAY,8CACZ/E,KAAK,YACLe,SAAUlB,EACVT,MAAOO,EAAUP,MACjBG,MAAOI,EAAUJ,MACjByF,UAAQ,IAEV,cAAC,EAAD,CACED,YAAY,sEACZ/E,KAAK,WACLe,SAAUlB,EACVT,MAAOQ,EAASR,MAChBG,MAAOK,EAASL,MAChByF,UAAQ,IAGV,cAAC,EAAD,CAAQzE,KAAK,SAAb,qDAGDgE,GACC,8BACE,cAAC,EAAD,CAAS9B,aAAcgC,EAAvB,SACE,eAAC,EAAD,CACEtD,UAAWK,IAAE4C,QACbH,aAAcQ,EACdP,QAAQ,6CAHV,0FAME,yCAAUvE,EAAUP,MAApB,YAA6BQ,EAASR,sBCvEvC6F,EAAM,WACjB,OACE,qBAAK9D,UAAWK,IAAE0D,IAAlB,SACE,sBAAK/D,UAAWK,IAAE2D,UAAlB,UACE,8HACmB,+IAGnB,cAACd,EAAD,UCPRe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,W","file":"static/js/main.397d8f07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"InputText_inputWrapper__1Nf_t\",\"errorMessage\":\"InputText_errorMessage__KXfyR\",\"label\":\"InputText_label__iVBFI\",\"text\":\"InputText_text__3z5mY\",\"input\":\"InputText_input__1bupA\",\"error\":\"InputText_error__3UPK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__10rEY\",\"large\":\"Button_large__1GZH0\",\"small\":\"Button_small__2-4Cv\",\"default\":\"Button_default__2ygXb\",\"error\":\"Button_error__2MHQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__10dw9\",\"container\":\"App_container__MiK3W container_container__1o5UP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3wvE7\",\"message\":\"Form_message__3kcGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Overlay_overlay__3RcD2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1eJrf\",\"wobble-hor-bottom\":\"Message_wobble-hor-bottom__3Uwte\",\"wobble-hor-top\":\"Message_wobble-hor-top__1I312\",\"bounce-in-zoomin\":\"Message_bounce-in-zoomin__3BK34\",\"bounce-in-top\":\"Message_bounce-in-top__3C0CW\",\"shake-top\":\"Message_shake-top__1rSva\",\"shake\":\"Message_shake__2KpwO\"};","export const validate = (value: string): string => {\n  const trimmedValue = value.trim();\n  let error = '';\n\n  if (typeof trimmedValue !== 'undefined' && trimmedValue === '') {\n    error = 'Поле обязательно для заполнения';\n  } else if (trimmedValue && trimmedValue.length < 2) {\n    error = 'В поле должно быть 2 или более знаков';\n  }\n\n  return error;\n};\n","import { ChangeEvent } from 'react';\nimport { makeAutoObservable } from 'mobx';\nimport { validate } from '../utils/validator';\n\ninterface IField {\n  value: string;\n  error: string;\n}\n\ntype FieldType = 'firstName' | 'lastName';\ntype FieldsType = Record<FieldType, IField>;\n\ninterface IFormStore {\n  fields: FieldsType;\n\n  changeHandler: (event: ChangeEvent<HTMLInputElement>) => void;\n  validateForm: () => void;\n  reset: () => void;\n}\n\nclass FormStore implements IFormStore {\n  fields: FieldsType = {\n    firstName: {\n      value: '',\n      error: '',\n    },\n    lastName: {\n      value: '',\n      error: '',\n    },\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    const eventName = name as FieldType;\n\n    this.fields[eventName].value = value;\n    this.fields[eventName].error = validate(this.fields[eventName].value);\n  };\n\n  validateForm = () => {\n    const { firstName, lastName } = this.fields;\n\n    firstName.error = validate(firstName.value);\n    lastName.error = validate(lastName.value);\n\n    return !(firstName.error || lastName.error);\n  };\n\n  reset = () => {\n    this.fields.firstName.value = '';\n    this.fields.lastName.value = '';\n\n    this.fields.firstName.error = '';\n    this.fields.lastName.error = '';\n  };\n}\n\nexport const formStore = new FormStore();\n","import React, { FC } from 'react';\n\ntype SvgIconType = {\n  type: 'text' | 'email' | 'password';\n};\n\nexport const SvgIcon: FC<SvgIconType> = ({ type }) => {\n  switch (type) {\n    case 'text':\n      return (\n        <svg\n          viewBox=\"0 0 484 484\"\n          height=\"24\"\n          width=\"24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"m401.648438 18.234375c-24.394532-24.351563-63.898438-24.351563-88.292969 0l-22.101563 22.222656-235.269531 235.144531-.5.503907c-.121094.121093-.121094.25-.25.25-.25.375-.625.746093-.871094 1.121093 0 .125-.128906.125-.128906.25-.25.375-.371094.625-.625 1-.121094.125-.121094.246094-.246094.375-.125.375-.25.625-.378906 1 0 .121094-.121094.121094-.121094.25l-52.199219 156.96875c-1.53125 4.46875-.367187 9.417969 2.996094 12.734376 2.363282 2.332031 5.550782 3.636718 8.867188 3.625 1.355468-.023438 2.699218-.234376 3.996094-.625l156.847656-52.324219c.121094 0 .121094 0 .25-.121094.394531-.117187.773437-.285156 1.121094-.503906.097656-.011719.183593-.054688.253906-.121094.371094-.25.871094-.503906 1.246094-.753906.371093-.246094.75-.621094 1.125-.871094.125-.128906.246093-.128906.246093-.25.128907-.125.378907-.246094.503907-.5l257.371093-257.371094c24.351563-24.394531 24.351563-63.898437 0-88.289062zm-232.273438 353.148437-86.914062-86.910156 217.535156-217.535156 86.914062 86.910156zm-99.15625-63.808593 75.929688 75.925781-114.015626 37.960938zm347.664062-184.820313-13.238281 13.363282-86.917969-86.917969 13.367188-13.359375c14.621094-14.609375 38.320312-14.609375 52.945312 0l33.964844 33.964844c14.511719 14.6875 14.457032 38.332031-.121094 52.949218zm0 0\" />\n        </svg>\n      );\n\n    case 'email':\n      return (\n        <svg\n          viewBox=\"0 0 512 512\"\n          height=\"24\"\n          width=\"24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M467 61H45C20.218 61 0 81.196 0 106v300c0 24.72 20.128 45 45 45h422c24.72 0 45-20.128 45-45V106c0-24.72-20.128-45-45-45zm-6.214 30L256.954 294.833 51.359 91h409.427zM30 399.788V112.069l144.479 143.24L30 399.788zM51.213 421l144.57-144.57 50.657 50.222c5.864 5.814 15.327 5.795 21.167-.046L317 277.213 460.787 421H51.213zM482 399.787L338.213 256 482 112.212v287.575z\" />\n        </svg>\n      );\n\n    case 'password':\n      return (\n        <svg\n          viewBox=\"0 0 24 24\"\n          height=\"24\"\n          width=\"24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"m18.75 24h-13.5c-1.24 0-2.25-1.009-2.25-2.25v-10.5c0-1.241 1.01-2.25 2.25-2.25h13.5c1.24 0 2.25 1.009 2.25 2.25v10.5c0 1.241-1.01 2.25-2.25 2.25zm-13.5-13.5c-.413 0-.75.336-.75.75v10.5c0 .414.337.75.75.75h13.5c.413 0 .75-.336.75-.75v-10.5c0-.414-.337-.75-.75-.75z\" />\n          <path d=\"m17.25 10.5c-.414 0-.75-.336-.75-.75v-3.75c0-2.481-2.019-4.5-4.5-4.5s-4.5 2.019-4.5 4.5v3.75c0 .414-.336.75-.75.75s-.75-.336-.75-.75v-3.75c0-3.309 2.691-6 6-6s6 2.691 6 6v3.75c0 .414-.336.75-.75.75z\" />\n          <path d=\"m12 17c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2zm0-2.5c-.275 0-.5.224-.5.5s.225.5.5.5.5-.224.5-.5-.225-.5-.5-.5z\" />\n          <path d=\"m12 20c-.414 0-.75-.336-.75-.75v-2.75c0-.414.336-.75.75-.75s.75.336.75.75v2.75c0 .414-.336.75-.75.75z\" />\n        </svg>\n      );\n\n    default:\n      return (\n        <svg\n          height=\"48\"\n          width=\"48\"\n          viewBox=\"0 0 512 512\"\n          aria-hidden=\"true\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M132.893 310.534l-30.082 10.911L91.9 291.364l30.081-10.911z\" />\n          <path d=\"M271.552 301.072l-77.856-46.72-41.616 15.152 10.944 30.064 27.28-9.92 82.144 49.28 97.6-65.072L480 315.088V480H32V347.2l40.8-14.848-10.928-30.048L0 324.8V512h512V292.912l-146.048-54.768z\" />\n          <path d=\"M0 0v278.848l66.576-24.224-10.928-30.064L32 233.152V32h448v168.912l-114.048-42.768-94.4 62.928-77.856-46.72-47.84 17.392 10.944 30.064 33.504-12.16 82.144 49.28 97.6-65.072L512 247.088V0z\" />\n          <path d=\"M96.656 243.686L85.721 213.63l30.07-10.94 10.935 30.055z\" />\n        </svg>\n      );\n  }\n};\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  KeyboardEvent,\n  FC,\n} from 'react';\n\nimport s from './InputText.module.scss';\nimport { SvgIcon } from '../SvgIcon';\n\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype PropsType = DefaultInputPropsType & {\n  type?: 'text' | 'email' | 'password';\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  errorClassName?: string;\n  text?: string;\n};\n\nexport const InputText: FC<PropsType> = ({\n  type = 'text',\n  onChange,\n  onChangeText,\n  onKeyPress,\n  onEnter,\n  error,\n  className,\n  errorClassName,\n  text,\n\n  ...restProps\n}) => {\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e);\n\n    onChangeText && onChangeText(e.currentTarget.value);\n  };\n  const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n\n    e.key === 'Enter' && onEnter && onEnter();\n  };\n\n  const finalErrorClassName = `${s.errorMessage} ${\n    errorClassName ? errorClassName : ''\n  }`;\n  const finalInputClassName = `${s.input} ${error ? s.error : ''} ${\n    className ? className : ''\n  }`;\n\n  return (\n    <div className={s.inputWrapper}>\n      {error && <span className={finalErrorClassName}>{error}</span>}\n\n      <label className={s.label}>\n        <span className={s.text}>{text || `Enter your ${type}`}</span>\n\n        <input\n          type={type}\n          onChange={onChangeHandler}\n          onKeyPress={onKeyPressHandler}\n          className={finalInputClassName}\n          {...restProps}\n        />\n\n        <SvgIcon type={type} />\n      </label>\n    </div>\n  );\n};\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps, FC } from 'react';\n\nimport s from './Button.module.scss';\n\ntype DefaultButtonPropsType = DetailedHTMLProps<\n  ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\n\ntype PropsType = DefaultButtonPropsType & {\n  error?: boolean;\n  large?: boolean;\n  small?: boolean;\n};\n\nexport const Button: FC<PropsType> = ({\n  error,\n  large,\n  small,\n  className,\n  ...restProps\n}) => {\n  const finalClassName = `${s.btn} ${large ? s.large : ''} ${\n    small ? s.small : ''\n  } ${error ? s.error : s.default} ${className ? className : ''}`;\n\n  return <button className={finalClassName} {...restProps} />;\n};\n","import React, { FC, MouseEvent, KeyboardEvent } from 'react';\n\nimport s from './Overlay.module.scss';\nimport { useLockBodyScroll } from '../../../hooks/useLockBodyScroll';\nimport { useKeyPress } from '../../../hooks/useKeyPress';\n\ntype PropsType = {\n  closeHandler: (\n    event?: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>,\n  ) => void;\n};\n\nexport const Overlay: FC<PropsType> = ({ children, closeHandler }) => {\n  useLockBodyScroll();\n  useKeyPress('Escape', closeHandler);\n\n  return (\n    <div className={s.overlay} onClick={closeHandler}>\n      {children}\n    </div>\n  );\n};\n","import { useLayoutEffect } from 'react';\n\nexport const useLockBodyScroll = () => {\n  useLayoutEffect(() => {\n    // Get original body overflow\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    // Prevent scrolling on mount\n    document.body.style.overflow = 'hidden';\n    // Re-enable scrolling when component unmounts\n    return () => {\n      document.body.style.overflow = originalStyle;\n    };\n  }, []); // Empty array ensures effect is only run on mount and unmount\n};\n","import { useState, useEffect, useCallback, KeyboardEvent } from 'react';\n\nexport const useKeyPress = (\n  targetKey: string,\n  action: (event?: KeyboardEvent<HTMLElement>) => void,\n) => {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // If pressed key is our target key then set to true\n  const downHandler = useCallback(\n    ({ key }: { key: string }) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n        // And take an action\n        action();\n      }\n    },\n    [targetKey, action],\n  );\n\n  // If released key is our target key then set to false\n  const upHandler = useCallback(\n    ({ key }: { key: string }) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    },\n    [targetKey],\n  );\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [downHandler, upHandler]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n};\n","import React, { FC, MouseEvent } from 'react';\n\nimport s from './Message.module.scss';\nimport { Button } from '../Button';\n\ntype PropsType = {\n  className?: string;\n  clickHandler?: (event?: MouseEvent<HTMLElement>) => void;\n  btnText?: string;\n};\n\nexport const Message: FC<PropsType> = ({\n  children,\n  className,\n  clickHandler,\n  btnText = 'Close',\n}) => {\n  const messageClassName = `${s.message} ${className ? className : ''}`;\n\n  return (\n    <div className={messageClassName}>\n      <p>{children}</p>\n      {clickHandler && (\n        <Button small error onClick={clickHandler}>\n          {btnText}\n        </Button>\n      )}\n    </div>\n  );\n};\n","import React, {\n  FC,\n  FormEvent,\n  KeyboardEvent,\n  MouseEvent,\n  useState,\n} from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport s from './Form.module.scss';\nimport { formStore } from '../../store/store';\nimport { InputText } from '../common/InputText';\nimport { Button } from '../common/Button';\nimport { Overlay } from '../common/Overlay';\nimport { Message } from '../common/Message';\n\nexport const Form: FC = observer(() => {\n  const [modal, setModal] = useState(false);\n\n  const {\n    fields: { firstName, lastName },\n    changeHandler,\n    validateForm,\n    reset,\n  } = formStore;\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const isValid = validateForm();\n    isValid && setModal(true);\n  };\n\n  const closeModalHandler = (\n    event: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement> | undefined,\n  ) => {\n    event?.stopPropagation();\n\n    if (event?.target === event?.currentTarget) {\n      setModal(false);\n      reset();\n    }\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={onSubmit} noValidate>\n        <InputText\n          placeholder=\"Ваше имя\"\n          name=\"firstName\"\n          onChange={changeHandler}\n          value={firstName.value}\n          error={firstName.error}\n          required\n        />\n        <InputText\n          placeholder=\"Ваша фамилия\"\n          name=\"lastName\"\n          onChange={changeHandler}\n          value={lastName.value}\n          error={lastName.error}\n          required\n        />\n\n        <Button type=\"submit\">Готово</Button>\n      </form>\n\n      {modal && (\n        <div>\n          <Overlay closeHandler={closeModalHandler}>\n            <Message\n              className={s.message}\n              clickHandler={closeModalHandler}\n              btnText=\"Закрыть\"\n            >\n              Здравствуйте,&nbsp;\n              <span>{`${firstName.value} ${lastName.value}`}</span>\n            </Message>\n          </Overlay>\n        </div>\n      )}\n    </div>\n  );\n});\n","import React from 'react';\n\nimport s from './App.module.scss';\nimport { Form } from '../components/Form/Form';\n\nexport const App = () => {\n  return (\n    <div className={s.app}>\n      <div className={s.container}>\n        <h1>\n          Тестовое задание <span>ООО Айсофт Сервисез</span>\n        </h1>\n\n        <Form />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { App } from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}